# -*- coding: utf-8 -*-
"""08-02.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oY-XMK2Lc7Eu7fXLYN655c2t_DUHabf9
"""

print("i am going college for \nlearning nlp")

print("i an going \ncollege for \nlearning nlp")

"""Space(\t)

"""

print("i an going \ncollege for \tlearning nlp")

"""## carriage return(\r)

"""

print("i an going college for \rlearning nlp")

import re

"""re.match()"""

string="007 jahnavi wants to learn the python"
pattern=r'\d+'
matching=re.match(pattern,string)
matching.group()

"""re.search()"""

import re
pattern=r'\d+'
string="jahnavi 007 wants 008 to learn the python"
matching=re.findall(pattern,string)
print(matching)

import re
pattern=r'\d+'
string="jahnavi 007 wants 008 to learn the python"
matching=re.search(pattern,string)
matching.group()

import re

pattern = r'\d+'
string = "jahnavi 007 wants 008 to learn the python"
result = re.sub(pattern, "XXX", string)
print(result)

import re
from bs4 import BeautifulSoup

def clean_text(text):
    emails = re.findall(r'\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}\b', text)

    hashtags = re.findall(r'#\w+', text)

    text = re.sub(r'\d+', '', text)

    soup = BeautifulSoup(text, "html.parser")
    text = soup.get_text()

    text = re.sub(r'\s+', ' ', text).strip()

    return {
        "cleaned_text": text,
        "emails": emails,
        "hashtags": hashtags
    }

text = """
Hello world! Contact us at info@example.com or support123@company.org. Follow us on social media: #AI #MachineLearning.
Visit <a href=\"http://example.com\">our website</a> for more details. This is a test with number 1234.
"""

result = clean_text(text)
print(result)

# Test case
text = """
Hello world! Contact us at info@example.com or support123@company.org. Follow us on social media: #AI #MachineLearning.
Visit <a href="http://example.com">our website</a> for more details. This is a test with numberÂ 1234.
"""

pattern=r'[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}'
emails=re.findall(pattern,text)
emails

hash_tags=re.findall(r'\w+',text)
hash_tags

hash_tags=re.findall(r'#\w+',text)
hash_tags

